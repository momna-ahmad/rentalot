import "./globals.css";
import Navbar from "../../components/navbar";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import {auth } from '@/auth' ;
import ProfileProvider  from '@/context/useProfileContext'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const session = await auth();
  let profile = null;

if (session?.user != null) {
  console.log("fetching profile");

  try {
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/get-user-profile`, {
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${(session?.user as any).token}`,
      },
      cache: 'no-store', // optional, to force server fetch
    });

    if (!res.ok) {
      throw new Error('Failed to fetch profile');
    }

    profile = await res.json();
  } catch (err) {
    console.error('Error fetching profile:', err);
    // profile remains null
  }
}



  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <>
        {session?.user != null ?
        <>
        <ProfileProvider value={profile}>
          <Navbar/>
          {children}
        </ProfileProvider>
        </>
         :
        <>
        <Navbar/>
          {children}
        </>
        }
        </>
      </body>
    </html>
  );
}
